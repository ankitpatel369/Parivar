@{
    ViewData["Title"] = "World Db";
}

@section PageTitle{
    <li class="active">World Db</li>
}

<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-header">
                <a href="javascript:;" onclick="AddEditCategory(0, parseInt($('#CategoryType').val()));" class="btn btn-primary pull-right"><i class="fa fa-plus" aria-hidden="true"></i> Add Category</a>
                <h3 class="card-title">Categories</h3>
                <div class="form-group clearfix col-md-3">
                    <label for="Categories" class="control-label">Category Type</label>
                    <select placeholder="Select Category" id="CategoryType" asp-items="ViewBag.CategoryTypeList as IEnumerable<SelectListItem>" class="form-control">
                    </select>
                </div>
            </div>
            <div class="card-body">
                <table id="dtCategories" class="table table-striped table-bordered dt-responsive  nowrap" style="border-collapse: collapse; border-spacing: 0; width: 100%;">
                    <thead>
                        <tr role="row" class="title_datatable">
                            <th>Action</th>
                            <th>Status</th>
                            <th>Category Name</th>
                            <th>Category Type</th>
                            <th>Created Date</th>
                            <th>Modified Date</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
</div> <!-- End Row -->


@section PageScripts{
    <script type="text/javascript">
        $(document).ready(function () {
            BindCategoriesList(parseInt($("#CategoryType").val()));
        });
        $(document).on("change", "#CategoryType", function () {
            const id = parseInt($(this).val());
            BindCategoriesList(id);
        });
        function AddEditCategory(id, selectedCategory) {
            var newUrl = `/Admin/Categories/AddEditCategories?id=${id}`;
            if (selectedCategory != 0) {
                newUrl += `&selectedCategory=${selectedCategory}`;
            }
            $("#modalContent").load(newUrl, function () {
                showModal();
            });
        }
        function BindCategoriesList(id) {
            if ($.fn.DataTable.isDataTable("#dtCategories")) {
                $("#dtCategories").dataTable().fnDestroy();
            }
            const categories = $("#dtCategories").DataTable({
                "sAjaxSource": "/Admin/Categories/GetCategoriesList?categoryType=" + id,
                "columns": [
                    {
                        "data": "id",
                        "autoWidth": false,
                        "searchable": false,
                        "orderable": false,
                        "render": function (data, type, row) {
                            const content = `<li><a href="javascript:;" ${dataParams("Edit", "edit", data)} class="dropdown-item action"><i class="fa fa-pencil" aria-hidden="true"></i> Edit</a></li>
                                                                 <li><a href="javascript:;" ${dataParams("Delete", "delete", data)} class="dropdown-item action"><i class="fa fa-trash" aria-hidden="true"></i> Delete</a></li>`;
                            return dataTableAction(content);
                        }
                    },
                    {
                        "data": "isActive",
                        "searchable": false,
                        "orderable": false,
                        "className": "admin_toggle text-center",
                        "render": function (data, type, row) {
                            return statusToggle(row.id, data);
                        }
                    },
                    {
                        "data": "categoryName",
                        "autoWidth": false,
                        "searchable": true
                    },
                    {
                        "data": "categoryType",
                        "autoWidth": false,
                        "searchable": true
                    },
                    {
                        "data": "dateCreated",
                        "autoWidth": false,
                        "searchable": true
                    },
                    {
                        "data": "dateModified",
                        "autoWidth": false,
                        "searchable": true
                    }
                ]
            });

            $('#dtCategories').on('draw.dt', function () {
                reInitBootstrapToggle();
            });
        }


        $('#dtCategories').on("change", ".admin_toggle", function (e) {
            const current = $(e.currentTarget).find("input");
            const id = $(current).data("id");
            $.ajax({
                url: "/Admin/Categories/ManageCategoriesStatus",
                data: { id: id },
                type: "POST",
                success: function (response) {
                    updateModifiedDate(id);
                    Parivar.HandleResponse(response);
                },
                error: function (data) {
                }
            });
        });

        $('#dtCategories').on("click", ".action", function (e) {
            const flag = $(e.currentTarget).data("flag");
            const id = $(e.currentTarget).data("id");
            switch (flag) {
                case "edit":
                    AddEditCategory(id);
                    break;
                case "delete":
                    DeleteCategory(id);
                    break;
                default:
            }
        });

        function DeleteCategory(id) {
            Parivar.Confirm("Delete Categories", Parivar.typeModel.Warning, "Are you sure?", Parivar.typeModel.Danger, "Yes, delete it!", function () {
                $.ajax({
                    url: "/Admin/Categories/RemoveCategories",
                    data: { id: id },
                    type: "POST",
                    success: function (response) {
                        setTimeout(function () {
                            Parivar.HandleResponse(response);
                            if (response.status === 1) {
                                window.BindCategoriesList();
                            }
                        }, 100);
                    },
                    error: function (data) { }
                });
            }, function () { });
        }
    </script>
}